/**
 * This script is generated by I Maker
 * DO NOT MODIFY!
 */


part of lib_test_server_store;

class UserPKStore {
  static int _step = 5;

  static Future set(UserPK pk) {
    num value = pk.get();
    List waitList = [];
    UserPK backupPK = _checkReachBackupStep(pk);
    if (backupPK != null) waitList.add(UserPKMariaDBStore.set(backupPK));

    waitList.add(UserPKRedisStore.set(pk));

    return Future.wait(waitList)
    .catchError(_handleErr);
  }

  static Future get() {
    return UserPKRedisStore.get()
    .then((UserPK pk) {
      if (pk.get() != 0) return pk;
      if (_step == 0) return pk;
      return UserPKMariaDBStore.get();
    })
    .catchError(_handleErr);
  }

  static Future del(UserPK pk) {
    List waitList = [];
    waitList.add(UserPKRedisStore.del(pk));
    waitList.add(UserPKMariaDBStore.del(pk));

    return Future.wait(waitList)
    .catchError(_handleErr);
  }

  static Future incr() {
    return UserPKRedisStore.exists()
    .then((int exists) {
      if (exists == 0) {
        return UserPKMariaDBStore.get()
        .then((UserPK pk) {
          pk.setUpdated(true);
          if (pk.get() != 0) return UserPKRedisStore.set(pk);
        });
      }
    })
    .then((_) {
      return UserPKRedisStore.incr()
      .then((UserPK pk) {
        UserPK backupPK = _checkReachBackupStep(pk);
        if (backupPK == null) return pk;

        return UserPKMariaDBStore.set(backupPK)
        .then((_) => pk);
      });
    })
    .catchError(_handleErr);
  }

  static UserPK _checkReachBackupStep(UserPK pk) {
    if (!(_step != 0 && (pk.get() - 1) % _step == 0)) return null;
    return new UserPK()..set(pk.get() - 1 + _step);
  }

  static void _handleErr(e) => throw e;
}
