/**
 * This script is generated by I Maker
 * DO NOT MODIFY!
 */


part of lib_test_server_store;

class RoomPKStore {
  static int _step = 0;

  static Future set(RoomPK pk) {
    num value = pk.get();
    List waitList = [];
    RoomPK backupPK = _checkReachBackupStep(pk);
    if (backupPK != null) waitList.add(RoomPKMariaDBStore.set(backupPK));

    waitList.add(RoomPKRedisStore.set(pk));

    return Future.wait(waitList)
    .catchError(_handleErr);
  }

  static Future get() {
    return RoomPKRedisStore.get()
    .then((RoomPK pk) {
      if (pk.get() != 0) return pk;
      if (_step == 0) return pk;
      return RoomPKMariaDBStore.get();
    })
    .catchError(_handleErr);
  }

  static Future del(RoomPK pk) {
    List waitList = [];
    waitList.add(RoomPKRedisStore.del(pk));
    waitList.add(RoomPKMariaDBStore.del(pk));

    return Future.wait(waitList)
    .catchError(_handleErr);
  }

  static Future incr() => RoomPKRedisStore.incr().catchError(_handleErr);

  static RoomPK _checkReachBackupStep(RoomPK pk) {
    if (!(_step != 0 && (pk.get() - 1) % _step == 0)) return null;
    return new RoomPK()..set(pk.get() - 1 + _step);
  }

  static void _handleErr(e) => throw e;
}
