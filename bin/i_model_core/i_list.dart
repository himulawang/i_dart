/**
 * This script is generated by I Maker
 * DO NOT MODIFY!
 */

class IList {
  List _pk;
  Map _list = {};
  Map _toAddList = {};
  Map _toDelList = {};
  Map _toSetList = {};
  bool _updated = false;
  bool _exist = false;

  bool _set(IModel model) => _list[model.getUnitedChildPK()] = model;

  get length => _list.length;
  List getPK() => _pk;
  bool isUpdated() => _updated;
  void setUpdated(bool flag) => _updated = flag;

  Map getList() => _list;
  Map getToAddList() => _toAddList;
  Map getToDelList() => _toDelList;
  Map getToSetList() => _toSetList;

  void resetToAddList() => _toAddList.clear();
  void resetToDelList() => _toDelList.clear();
  void resetToSetList() => _toSetList.clear();
  void resetAllToList() {
    resetToAddList();
    resetToDelList();
    resetToSetList();
    _updated = false;
  }

  void setExist([bool exist = true]) { _exist = exist; }
  bool isExist() => _exist;

  void add(IModel model) {
    String index = model.getUnitedChildPK();
    if (_list.containsKey(index)) throw new IModelException(10003);
    
    _list[index] = model;
    _toAddList[index] = model;

    _updated = true;
  }
  void set(IModel model) {
    String index = model.getUnitedChildPK();
    if (_list[index] == null) throw new IModelException(10005);

    _list[index] = model;
    _toSetList[index] = model;

    if (_toAddList.containsKey(index)) _toAddList[index] = model;

    _updated = true;
  }
  void del(IModel model) {
    String index = model.getUnitedChildPK();
    if (_list[index] == null) throw new IModelException(10004);

    if (_list.containsKey(index)) {
      _list.remove(index);
      _toDelList[index] = model;
    }

    if (_toAddList.containsKey(index)) _toAddList.remove(index);

    if (_toSetList.containsKey(index)) _toSetList.remove(index);

    _updated = true;
  }

  Map toFixedList([bool filterOn = false]) {
    Map result = {};
    _list.forEach((String index, IModel child) {
      result[index] = child.toFixedList(filterOn);
    });
    return result;
  }
  Map toList([bool filterOn = false]) {
    Map result = {};
    _list.forEach((String index, IModel child) {
      result[index] = child.toList(filterOn);
    });
    return result;
  }
  Map toFull([bool filterOn = false]) {
    Map result = {};
    _list.forEach((String index, IModel child) {
      result[index] = child.toFull(filterOn);
    });
    return result;
  }
  Map toAbb([bool filterOn = false]) {
    Map result = {};
    _list.forEach((String index, IModel child) {
      result[index] = child.toAbb(filterOn);
    });
    return result;
  }
}