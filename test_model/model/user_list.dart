/**
 * This script is generated by I Maker
 * DO NOT MODIFY!
 */


part of lib_test_model;

class UserList extends IList {
  static String _delimiter = ':';
  UserList(id) { _initPK([id]); }

  UserList.filledMap(id, Map dataList) {
    _initPK([id]);

    dataList.forEach((String i, User model) {
      if (model is! User) return;
      rawSet(model);
    });
  }

  UserList.filledList(id, List dataList) {
    _initPK([id]);

    dataList.forEach((User model) {
      if (model is! User) return;
      rawSet(model);
    });
  }

  _initPK(List pk) => pks = pk;

  setPK(id) => pks = [id];
  String getUnitedPK() {
    if (pks.contains(null)) throw new IModelException(10021);
    return pks.join(_delimiter);
  }

  User get(name) => list["${name}"];

  void fromList(List dataList, [bool changeUpdatedList = false]) {
    if (dataList is! List) throw new IModelException(10012, [this.runtimeType]);

    dataList.forEach((List data) {
      User model = new User();
      model.fromList(data, changeUpdatedList);
      if (changeUpdatedList) {
        if (get(model.getUnitedChildPK()) == null) {
          add(model);
        } else {
          set(model);
        }
      } else {
        rawSet(model);
      }
    });
  }
  void fromFull(Map dataList, [bool changeUpdatedList = false]) {
    if (dataList is! Map) throw new IModelException(10013, [this.runtimeType]);

    dataList.forEach((String i, Map data) {
      User model = new User();
      model.fromFull(data, changeUpdatedList);
      if (changeUpdatedList) {
        if (get(model.getUnitedChildPK()) == null) {
          add(model);
        } else {
          set(model);
        }
      } else {
        rawSet(model);
      }
    });
  }
  void fromAbb(Map dataList, [bool changeUpdatedList = false]) {
    if (dataList is! Map) throw new IModelException(10014, [this.runtimeType]);

    dataList.forEach((String i, Map data) {
      User model = new User();
      model.fromAbb(data, changeUpdatedList);
      if (changeUpdatedList) {
        if (get(model.getUnitedChildPK()) == null) {
          add(model);
        } else {
          set(model);
        }
      } else {
        rawSet(model);
      }
    });
  }
}
